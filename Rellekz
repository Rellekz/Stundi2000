Program project1;
uses Crt;
type
  person = array[1..79] of record
       Name: string;
       GWeA, NawieA, SpracheeA, AntwortMusikKunst, GWgA, NawigA, SprachegA : char;
       Kunst, Musik, ReligA, KFMathe, KFDeutsch : boolean;
  end;
  AnzahlProKurs = array[1..27,1..4] of integer;
  KursAnzahl = array[1..29] of integer;
  Plan = array[1..5,1..9,1..5] of string;
  temp_plan = array[1..5,1..9] of string;


var Elfer : person;
    AnzahlDerKurse, AnzahlKurseProFach : KursAnzahl;
    AnzahlSchuelerProKurs : AnzahlProKurs;
    AnzahlKlasse, AnzahlElfer, Anzahl, AnzahlSchueler,a,b,c,d,e,f,g,h,j,k,l : integer;
    Ausgabe1 : char;
    Eingabe1 : string;
    Stundi2000 : plan;
    temp_stundenplan : temp_plan;

procedure Eingabenueberpruefung(var Eingabe2 : string; var Ausgabe2 : char);
  begin
    if Eingabe2 = 'Englisch' then Ausgabe2 := 'E';
    if Eingabe2 = 'Franzoesisch' then Ausgabe2 := 'F';
    if Eingabe2 = 'Latein' then Ausgabe2 := 'L';
    if Eingabe2 = 'Altgriechisch' then Ausgabe2 := 'A';
    if Eingabe2 = 'Physik' then Ausgabe2 := 'P';
    if Eingabe2 = 'Biologie' then Ausgabe2 := 'B';
    if Eingabe2 = 'Chemie' then Ausgabe2 := 'C';
    if Eingabe2 = 'Religion' then Ausgabe2 := 'R';
    if Eingabe2 = 'Geschichte' then Ausgabe2 := 'Z';
    if Eingabe2 = 'Geographie' then Ausgabe2 := 'G';
    if Eingabe2 = 'WR' then Ausgabe2 := 'W';
    if Eingabe2 = 'Sozialkunde' then Ausgabe2 := 'S';
  end;

function gruppe : string;
var z : integer;
  begin
  randomize;
    repeat
      z := random(11) + 1;
      writeln('z = ',z);
      if (z = 1) and (a > 0) then
        begin
          gruppe := 'Deutsch';
          a := a - 1;
        end
      else if (z = 2) and (b > 0) then
        begin
          gruppe := 'Mathe';
          b := b - 1;
        end
      else if (z = 3) and (c > 0) then
        begin
          gruppe := 'Nawi eA';
          c := c - 1;
        end
      else if (z = 4) and (d > 0) then
        begin
          gruppe := 'GW eA';
          d := d - 1;
        end
      else if (z = 5) and (e > 0) then
        begin
          gruppe := 'Nawi gA';
          e := e - 1;
        end
      else if (z = 6) and (f > 0) then
        begin
          gruppe := 'GW gA';
          f := f - 1;
        end
      else if (z = 7) and (g > 0) then
        begin
          gruppe := 'Sprache eA';
          g := g - 1;
        end
      else if (z = 8) and (h > 0) then
        begin
          gruppe := 'Sprache gA';
          h := h - 1;
        end
      else if (z = 9) and (j > 0) then
        begin
          gruppe := 'Reli gA';
          j := j - 1;
        end
      else if (z = 10) and (k > 0) then
        begin
          gruppe := 'Sport';
          k := k - 1;
        end
      else if (z = 11) and (l > 0) then
        begin
          gruppe := 'Musik/Kunst';
          l := l - 1;
        end
      else gruppe := 'x';
    until (gruppe <> 'x') or (a = 0) and (b = 0) and (c = 0) and (d = 0) and (e = 0) and (f = 0) and (g = 0) and (h = 0) and (j = 0) and (k = 0);
  end;

procedure BerechnungKurse(var AFK : KursAnzahl; var AnzahlKurs : KursAnzahl; var AnzahlSchuelerKurs : AnzahlProKurs);
var i : integer;
  begin
    for i := 1 to 29 do
      begin

        if (AFK[i] > 24) and (AFK[i] <= 48) then
          AnzahlKurs[i] := 2;   {Wie viele Kurse es gibt}

          if AFK[i] mod 2 <> 0 then
            begin
              AnzahlSchuelerKurs[i,1] := AFK[i] div 2 + 1; {Wie viele Schueler pro Kurs}
              AnzahlSchuelerKurs[i,2] := AFK[i] div 2;
            end
          else
            begin
              AnzahlSchuelerKurs[i,1] := AFK[i] div 2;
              AnzahlSchuelerKurs[i,2] := AFK[i] div 2;
            end;

        if (AFK[i] > 48) and (AFK[i] <= 72) then
          AnzahlKurs[i] := 3;

          if AFK[i] mod 3 = 1 then
            begin
              AnzahlSchuelerKurs[i,1] := AFK[i] div 3 + 1;
              AnzahlSchuelerKurs[i,2] := AFK[i] div 3;
              AnzahlSchuelerKurs[i,3] := AFK[i] div 3;
            end;

          if AFK[i] mod 3 = 2 then
            begin
              AnzahlSchuelerKurs[i,1] := AFK[i] div 3 + 1;
              AnzahlSchuelerKurs[i,2] := AFK[i] div 3 + 1;
              AnzahlSchuelerKurs[i,3] := AFK[i] div 3;
            end

          else
            begin
              AnzahlSchuelerKurs[i,1] := AFK[i] div 3;
              AnzahlSchuelerKurs[i,2] := AFK[i] div 3;
              AnzahlSchuelerKurs[i,3] := AFK[i] div 3;
            end;

        if (AFK[i] > 72) and (AFK[i] <= 96) then
          AnzahlKurs[i] := 4;

          if AFK[i] mod 4 = 1 then
            begin
              AnzahlSchuelerKurs[i,1] := AFK[i] div 4 + 1;
              AnzahlSchuelerKurs[i,2] := AFK[i] div 4;
              AnzahlSchuelerKurs[i,3] := AFK[i] div 4;
              AnzahlSchuelerKurs[i,4] := AFK[i] div 4;
            end;

          if AFK[i] mod 4 = 2 then
            begin
              AnzahlSchuelerKurs[i,1] := AFK[i] div 4 + 1;
              AnzahlSchuelerKurs[i,2] := AFK[i] div 4 + 1;
              AnzahlSchuelerKurs[i,3] := AFK[i] div 4;
              AnzahlSchuelerKurs[i,4] := AFK[i] div 4;
            end;

          if AFK[i] mod 4 = 3 then
            begin
              AnzahlSchuelerKurs[i,1] := AFK[i] div 4 + 1;
              AnzahlSchuelerKurs[i,2] := AFK[i] div 4 + 1;
              AnzahlSchuelerKurs[i,3] := AFK[i] div 4 + 1;
              AnzahlSchuelerKurs[i,4] := AFK[i] div 4;
            end

          else
            begin
              AnzahlSchuelerKurs[i,1] := AFK[i] div 4;
              AnzahlSchuelerKurs[i,2] := AFK[i] div 4;
              AnzahlSchuelerKurs[i,3] := AFK[i] div 4;
              AnzahlSchuelerKurs[i,4] := AFK[i] div 4;
            end;

        if AFK[i] <= 24 then
          begin
            AnzahlKurs[i] := 1;
            AnzahlSchuelerKurs[i,1] := AFK[i];
          end;
      end;
  end;

procedure counter(var Kl : person; var AFK : KursAnzahl; AnzahlSchueler : integer);
  var n : integer;
  begin
    for n := 1 to AnzahlSchueler do
      begin
        if Kl[n].Musik = true then                                    {Musik gA 1}
          AFK[1] := AFK[1] + 1;
        if Kl[n].Kunst = true then                                    {Kunst gA 2}
          AFK[2] := AFK[2] + 1;
        if Kl[n].NawieA = 'P' then                                    {Physik eA 3}
          AFK[3] := AFK[3] + 1;
        if Kl[n].NawieA = 'B' then                                    {Biologie eA 4}
          AFK[4] := AFK[4] + 1;
        if Kl[n].NawieA = 'C' then                                    {Chemie eA 5}
          AFK[5] := AFK[5] + 1;
        if Kl[n].GWeA = 'W' then                                      {WR eA 6}
          AFK[6] := AFK[6] + 1;
        if Kl[n].GWeA = 'S' then                                      {Sozialkunde eA 7}
          AFK[7] := AFK[7] + 1;
        if Kl[n].GWeA = 'G' then                                      {Geographie eA 8}
          AFK[8] := AFK[8] + 1;
        if Kl[n].GWeA = 'Z' then                                      {Geschichte eA 9}
          AFK[9] := AFK[9] + 1;
        if Kl[n].GWeA = 'R' then                                      {Religion eA 10}
          AFK[10] := AFK[10] + 1;
        if (Kl[n].NawigA = 'P') then                                  {Physik gA 11}
          AFK[11] := AFK[11] + 1;
        if (Kl[n].NawigA = 'B') then                                  {Biologie gA 12}
          AFK[12] := AFK[12] + 1;
        if (Kl[n].NawigA = 'C') then                                  {Chemie gA 13}
          AFK[13] := AFK[13] + 1;
        if (Kl[n].GWgA = 'W') then                                    {WR gA 14}
          AFK[14] := AFK[14]+ 1;
        if (Kl[n].GWgA = 'S') then                                    {Sozialkunde gA 15}
          AFK[15] := AFK[15] + 1;
        if (Kl[n].GWgA = 'G') then                                    {Geographie gA 16}
          AFK[16] := AFK[16] + 1;
        if (Kl[n].GWgA = 'Z') then                                    {Geschichte gA 17}
           AFK[17] := AFK[17] + 1;
        if Kl[n].ReligA then                                          {Religion gA 18}
           AFK[18] := AFK[18] + 1;
        if Kl[n].KFDeutsch then                                       {Deutsch eA 19}
           AFK[19] := AFK[19] + 1;
        if Kl[n].KFMathe then                                         {Mathe eA 20}
           AFK[20] := AFK[20] + 1;
        if Kl[n].SpracheeA = 'E' then                                 {Englisch eA 21}
          AFK[21] := AFK[21] + 1;
        if Kl[n].SpracheeA = 'F' then                                 {Franzoesisch eA 22}
          AFK[22] := AFK[22] + 1;
        if Kl[n].SpracheeA = 'L' then                                 {Latein eA 23}
          AFK[23] := AFK[23] + 1;
        if Kl[n].SpracheeA = 'A' then                                 {Altgriechisch eA 24}
          AFK[24] := AFK[24] + 1;
        if (Kl[n].SprachegA = 'E') then                               {Englisch gA 25}
          AFK[24] := AFK[24] + 1;
        if (Kl[n].SprachegA = 'F') then                               {Franzoesisch gA 26}
          AFK[25] := AFK[25] + 1;
        if (Kl[n].SprachegA = 'L') then                               {Latein gA 27}
          AFK[26] := AFK[26] + 1;
        if (Kl[n].SprachegA = 'A') then                               {Altgriechisch gA 28}
          AFK[27] := AFK[27] + 1;
        AFK[28] := AnzahlSchueler;                                    {Seminarfach 29}
        AFK[29] := AnzahlSchueler;                                    {Sport gA 30}
      end;
    end;

procedure Abfrage(var person_elfer : person; AnzahlSchueler : integer);
var i : integer;
  begin
    for i := 1 to AnzahlSchueler do
      begin
        clrscr;
        write('Wie heissen Sie? ');
        readln(person_elfer[i].Name);
        writeln;
        writeln('Folgende Antwortmoeglichkeiten stehen zur Verfuegung: (ae, oe, ue und sz = ss beachten)');
        writeln('Altgriechisch, Biologie, Chemie, Englisch, Franzoesisch, Geographie, Geschichte, Informatik, Latein, Physik, Religion, Sozialkunde, WR');
        writeln;
        write('Sie muessen Mathe und Deutsch mit erhoehtem Anforderungsniveau, ausserdem noch   Seminarfach und Sport');
        writeln(' mit grundlegendem Anforderungsniveau belegen.');
        writeln;
        person_elfer[i].KFMathe := true;
        person_elfer[i].KFDeutsch := true;

        writeln('Welche eA Fremdsprache haben Sie gewaehlt?');
        readln(Eingabe1);
        Eingabenueberpruefung(Eingabe1, Ausgabe1);
        person_elfer[i].SpracheeA := Ausgabe1;
        writeln;

        writeln('Welche gA Fremdsprache haben Sie gewaehlt?');
        readln(person_elfer[i].SprachegA);
        writeln;
        writeln('Welche eA Naturwissenschaft haben Sie gewaehlt?');
        readln(person_elfer[i].NawieA);
        writeln;
        writeln('Welche gA Naturwissenschaft haben Sie gewaehlt?');
        readln(person_elfer[i].NawigA);
        writeln;
        writeln('Welche eA Gesellschaftswissenschaft haben Sie gewaehlt?'); {WR, Geo, Geschichte, Sozi, Reli als Eingabe}
        readln(person_elfer[i].GWeA);
        writeln;

        if person_elfer[i].GWeA = 'Z' then   {Geschichte=Z?}
          begin
            write('Welche gA Gesellschaftswissenschaft haben Sie noch gewaehlt?');
            readln(person_elfer[i].GWgA);
            writeln('Sie muessen Religion mit grundlegendem Anforderungsniveau machen.');
            person_elfer[i].ReligA := true; {!}
          end
        else
          begin
            person_elfer[i].GWgA := 'Z'; {Z = Geschichte}
            writeln('Sie muessen Geschichte als gA Gesellschaftswissenschaft nehmen.');
            person_elfer[i].ReligA := true;
            writeln('Ausserdem muessen sie auch Religion gA nehmen.');
          end;

        if person_elfer[i].GWeA = 'R' then
          begin
            writeln('Sie muessen Geschichte gA nehmen.');
            person_elfer[i].GWgA := 'Z';   {!!!}
          end;

        writeln('Haben Sie Musik gewaehlt? <y/n> ');
        readln(person_elfer[i].AntwortMusikKunst);
        if person_elfer[i].AntwortMusikKunst = 'y' then
          begin
            person_elfer[i].Musik := true;
            writeln('Sie haben Musik gewaehlt.');
          end
        else
          begin
            person_elfer[i].Kunst := true;
            writeln('Sie haben Kunst gewaehlt.');
          end;

        writeln;
    end;
  end;


procedure Stundenplanerstellung (var AnzahlKurs : KursAnzahl; var AnzahlSchuelerKurs : AnzahlProKurs; var Stundi : plan; var Stundenplan : temp_plan);
var tag, stunde, kurs, i, n : integer;
    temp : string;
  begin
    Stundi[1,1,1] := ' ';
    Stundenplan[1,1] := 'A';
    randomize;
    tag := 1;
    stunde := 2;
    temp := gruppe;
    Stundenplan[tag,stunde] := temp;
    Stundenplan[tag,stunde + 1] := temp;
    temp := gruppe;
    stunde := 4;
    Stundenplan[tag,stunde] := temp;
    Stundenplan[tag,stunde + 1] := temp;
    temp := gruppe;
    stunde := 6;
    Stundenplan[tag,stunde] := temp;
    Stundenplan[tag,stunde + 1] := temp;
    temp := gruppe;
    stunde := 8;
    Stundenplan[tag,stunde] := temp;
    Stundenplan[tag,stunde + 1] := temp;
    for tag := 2 to 5 do
      begin
        randomize;
        i := random(2) + 1;
        if i = 1 then
          begin
            stunde := 1;
            temp := gruppe;
            Stundenplan[tag,stunde] := temp;
            Stundenplan[tag,stunde + 1] := temp;
          end
        else i := 2; {nur als platzhalter für else}
        stunde := 3;
        temp := gruppe;
        Stundenplan[tag,stunde] := temp;
        Stundenplan[tag,stunde + 1] := temp;
        stunde := 5;
        temp := gruppe;
        Stundenplan[tag,stunde] := temp;
        Stundenplan[tag,stunde + 1] := temp;
        stunde := 7;
        randomize;
        i := random(2) + 1;
        if i = 1 then
          begin
            temp := gruppe;
            Stundenplan[tag,stunde] := temp;
            Stundenplan[tag,stunde + 1] := temp;
          end
        else i := 2;
      end;
    for i := 1 to 5 do
      begin
        for n := 1 to 9 do
          begin
            write(i,',',n,' ');
            writeln(Stundenplan[i,n]);         {writeln!}
          end;
        readln;
      end;
  end;


begin               {HP}
  clrscr;
  a := 2;
  b := 2;
  c := 2;
  d := 2;
  e := 1;
  f := 1;
  g := 2;
  h := 1;
  j := 1;
  k := 1;
  l := 1;
  textcolor(lightred);
  writeln(' __________ _____________ _____   _____ _____       _____ __________   ____  ');
  writeln(' I        I I           I I   I   I   I I    \      I   I I         \  I  I  ');
  writeln(' I   _____I I____   ____I I   I   I   I I     \     I   I I   ____   \ I__I  ');
  writeln(' I   I          I   I     I   I   I   I I      \    I   I I   I  I   I ____  ');
  writeln(' I   I_____     I   I     I   I   I   I I       \   I   I I   I  I   I I  I  ');
  writeln(' I        I     I   I     I   I   I   I I   I\   \  I   I I   I  I   I I  I  ');
  writeln(' I_____   I     I   I     I   I   I   I I   I \   \ I   I I   I  I   I I  I  ');
  writeln('      I   I     I   I     I   I   I   I I   I  \   \I   I I   I  I   I I  I  ');
  writeln(' _____I   I     I   I     I   I___I   I I   I   \       I I   I__I   I I  I  ');
  writeln(' I        I     I   I     I           I I   I    \      I I          I I  I  ');
  writeln(' I________I     I___I     I___________I I___I     \_____I I_________/  I__I  ');
  textcolor(lightgreen);
  writeln('             __________  ___________  ___________  ___________       ');
  writeln('             I        I  I         I  I         I  I         I       ');
  writeln('             I_____   I  I  _____  I  I  _____  I  I  _____  I       ');
  writeln('                  I   I  I  I   I  I  I  I   I  I  I  I   I  I       ');
  writeln('             _____I   I  I  I   I  I  I  I   I  I  I  I   I  I       ');
  writeln('      / \    I        I  I  I   I  I  I  I   I  I  I  I   I  I    / \   ');
  writeln('      \ /    I   _____I  I  I   I  I  I  I   I  I  I  I   I  I    \ /   ');
  writeln('             I   I       I  I   I  I  I  I   I  I  I  I   I  I       ');
  writeln('             I   I_____  I  I___I  I  I  I___I  I  I  I___I  I       ');
  writeln('             I        I  I         I  I         I  I         I       ');
  writeln('             I________I  I_________I  I_________I  I_________I       ');
  textcolor(white);
  writeln;
  writeln('                              "Press Enter"        ');
  readln;
  clrscr;
  writeln;
  writeln('Hallo!');
  writeln('Du hast dich fuer die neueste und innovativste Moeglichkeit entschieden,');
  writeln('im 21. Jahrhundert deinen persoenlichen Stundenplan zu erstellen.');
  writeln('Dieses Programm kam am 01. Januar 2000 auf den Markt und soll das Leben');
  writeln('vieler Schueler entscheidend verbessern.');
  textcolor(lightred);
  write('Stundi');
  textcolor(lightgreen);
  write(' 2000 ');
  textcolor (white);
  writeln('aendert die Art und Weise, wie auf der Welt Stundenplaene erstellt werden.');
  writeln('Da sich das Programm noch am Anfang befindet, wird es fuer die Zeit der ');
  writeln('Veroeffentlichung ausschliesslich fuer die Oberstufen in Thueringen benutzt werden.');
  readln;
  write('Wie viele Schueler der elfen Klasse gibt es? (vorraussichtlich) ');
  readln(AnzahlSchueler);
  Abfrage(Elfer, AnzahlSchueler);
  counter(Elfer, AnzahlDerKurse, AnzahlSchueler);
  BerechnungKurse(AnzahlDerKurse, AnzahlKurseProFach, AnzahlSchuelerProKurs);
  Stundenplanerstellung(AnzahlKurseProFach, AnzahlSchuelerProKurs, Stundi2000, temp_stundenplan);
  readln;
end.
